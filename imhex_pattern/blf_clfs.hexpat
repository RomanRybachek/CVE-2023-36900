enum CLFS_EXTEND_STATE : u32
{
    ClfsExtendStateNone,
    ClfsExtendStateExtendingFsd,
    ClfsExtendStateFlushingBlock
};

enum CLFS_METADATA_BLOCK_TYPE : u32
{
    ClfsMetaBlockControl,
    ClfsMetaBlockControlShadow,
    ClfsMetaBlockGeneral,
    ClfsMetaBlockGeneralShadow,
    ClfsMetaBlockScratch,
    ClfsMetaBlockScratchShadow
};

enum CLFS_TRUNCATE_STATE : u32
{
    ClfsTruncateStateNone,
    ClfsTruncateStateModifyingStream,
    ClfsTruncateStateSavingOwner,
    ClfsTruncateStateModifyingOwner,
    ClfsTruncateStateSavingDiscardBlock,
    ClfsTruncateStateModifyingDiscardBlock
};

struct CLFS_METADATA_RECORD_HEADER
{
    u64 ullDumpCount;
};


struct CLFS_LSN {
    u64 Internal;
};

struct CLFS_TRUNCATE_CONTEXT
{
    CLFS_TRUNCATE_STATE eTruncateState;
    padding[4];
    u64 cClients;
    u64 iClient;
    CLFS_LSN lsnOwnerPage;
    CLFS_LSN lsnLastOwnerPage;
    u32 cInvalidSector;
    padding[4];
};

struct CLFS_METADATA_BLOCK
{
    char *pbImage : u64;

    u32 cbImage;
    u32 cbOffset;
    CLFS_METADATA_BLOCK_TYPE eBlockType;
    padding[4];
};

struct CLFS_CONTROL_RECORD
{
    CLFS_METADATA_RECORD_HEADER hdrControlRecord;
    u64 ullMagicValue;
    u32 Version;
    CLFS_EXTEND_STATE eExtendState;
    u16 iExtendBlock;
    u16 iFlushBlock;
    u32 cNewBlockSectors;
    u32 cExtendStartSectors;
    u32 cExtendSectors;
    CLFS_TRUNCATE_CONTEXT cxTruncate;
    u16 cBlocks;
    padding[2];
    u32 cReserved;
    CLFS_METADATA_BLOCK rgBlocks[6];
};

CLFS_CONTROL_RECORD var @ 0x70;