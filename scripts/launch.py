import os
import sys

CUR_DIR = "C:\\Users\\Bill\\Desktop\\clfs\\"
SHARED_FOLDER = "Z:\\"
LOG_FOLDER = "log_files\\"
LOG_NAME = "log1::s1"
# LOG_NAME = sys.argv[2]
FOLDER_FOR_COPY = "log_copy\\"
UTILS_FOLDER = "utils\\"

VM_LOG_PATH_ABSOLUTE = CUR_DIR + LOG_FOLDER + LOG_NAME
VM_LOG_PATH_RELATIVE = LOG_FOLDER + LOG_NAME
LOG_NAME_WITH_EXT = LOG_NAME + ".blf"
MOD_LOG_NAME = LOG_NAME + "_updated.blf"
HOST_LOGCOPY_FOLDER = SHARED_FOLDER + FOLDER_FOR_COPY
HOST_PAYLOAD = SHARED_FOLDER + "payload.blf"
HOST_PAYLOAD_UPDATED = SHARED_FOLDER + "payload_updated.blf"

UPDATE_CRC32_COMMAND = "py update_crc32.py "
UPDATE_CRC32_END = " -crc 0 5"

if len(sys.argv) < 2:
    print("Usage: python launch.py c|o|g|i|w")
    exit(1)

def create_log():
    os.system("rmdir /S /Q " + LOG_FOLDER)
    os.system("mkdir " + LOG_FOLDER)
    os.system("create_log_with_container.exe " + VM_LOG_PATH_RELATIVE)

def open_log():
    if sys.argv[1].find("w") != -1:
        os.system(UPDATE_CRC32_COMMAND + HOST_PAYLOAD + UPDATE_CRC32_END)
    os.system("copy /Y " + HOST_PAYLOAD_UPDATED + " " + LOG_FOLDER + LOG_NAME_WITH_EXT)
    os.system("open_log.exe " + VM_LOG_PATH_RELATIVE)

def get_log():
    os.system("rmdir /S /Q " + HOST_LOGCOPY_FOLDER)
    os.system("mkdir " + HOST_LOGCOPY_FOLDER)
    os.system("copy /Y " + LOG_FOLDER + " " + HOST_LOGCOPY_FOLDER)

def copy_utilities():
    os.system("copy /Y "+ SHARED_FOLDER + UTILS_FOLDER + "create_log_with_container.exe ." )
    os.system("copy /Y "+ SHARED_FOLDER + UTILS_FOLDER + "open_log.exe ." )
    os.system("copy /Y "+ SHARED_FOLDER + UTILS_FOLDER + "update_crc32.py ." )

if sys.argv[1].find("c") != -1 : #create
    create_log()
if sys.argv[1].find("o") != -1: #open
    open_log()
if sys.argv[1].find("g") != -1: #get
    get_log()
if sys.argv[1].find("u") != -1: #utils
    copy_utilities()
